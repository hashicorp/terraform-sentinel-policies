import "strings"

providers = {
	"aws": {
		"alias": "",
		"config": {
			"region": {
				"references": [
					"var.aws_region",
				],
			},
		},
		"module_address":      "",
		"name":                "aws",
		"provider_config_key": "aws",
		"version_constraint":  "",
	},
}

resources = {
	"aws_s3_bucket.bucket": {
		"address": "aws_s3_bucket.bucket",
		"config": {
			"acl": {
				"references": [
					"var.bucket_acl",
				],
			},
			"bucket": {
				"references": [
					"var.bucket_name",
				],
			},
			"logging": [
				{
					"target_bucket": {
						"constant_value": "roger-tf",
					},
				},
			],
			"server_side_encryption_configuration": [
				{
					"rule": [
						{
							"apply_server_side_encryption_by_default": [
								{
									"kms_master_key_id": {
										"constant_value": "arn:aws:kms:us-east-1:753646501470:key/00c892e8-40c4-4048-a650-0f755876503d",
									},
									"sse_algorithm": {
										"constant_value": "aws:kms",
									},
								},
							],
						},
					],
				},
			],
			"website": [
				{
					"index_document": {
						"constant_value": "index.html",
					},
					"routing_rules": {
						"constant_value": "[{\n    \"Condition\": {\n        \"KeyPrefixEquals\": \"docs/\"\n    },\n    \"Redirect\": {\n        \"ReplaceKeyPrefixWith\": \"documents/\"\n    }\n}]\n",
					},
				},
			],
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "bucket",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_s3_bucket",
	},
}

provisioners = {}

variables = {
	"aws_region": {
		"default":        "us-east-1",
		"description":    "AWS region",
		"module_address": "",
		"name":           "aws_region",
	},
	"bucket_acl": {
		"default":        "private",
		"description":    "ACL for S3 bucket: private, public-read, public-read-write, etc",
		"module_address": "",
		"name":           "bucket_acl",
	},
	"bucket_name": {
		"default":        null,
		"description":    "Name of the bucket to create",
		"module_address": "",
		"name":           "bucket_name",
	},
}

outputs = {
	"sse": {
		"depends_on":     [],
		"description":    "",
		"module_address": "",
		"name":           "sse",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_s3_bucket.bucket",
			],
		},
	},
}

module_calls = {}

func strip_index(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
