# This policy uses the Sentinel tfplan/v2 import to require that
# all S3 buckets have ACL "private" and be encrypted by a KMS key

# Import common-functions/tfplan-functions/tfplan-functions.sentinel
# with alias "plan"
import "tfplan-functions" as plan
import "general-functions" as general


# Get all S3 buckets
allS3Buckets = plan.resources("aws_s3_bucket")

# Filter to S3 buckets that do not have private ACL
# Warnings will be printed for all violations since the last parameter is true
nonPrivateS3Buckets = plan.attribute_is_not_value(allS3Buckets,
                      "acl", "private", true)

# Filter to S3 buckets that are not encrypted by KMS
# Warnings will be printed for all violations since the last parameter is true
nonEncryptedS3Buckets = plan.attribute_is_not_value(allS3Buckets,
  "server_side_encryption_configuration.0.rule.0.apply_server_side_encryption_by_default.0.sse_algorithm",
"aws:kms", true)

# Main rule
validated = length(nonPrivateS3Buckets["messages"]) is 0 and length(nonEncryptedS3Buckets["messages"]) is 0
main = rule {
  validated is true
}
