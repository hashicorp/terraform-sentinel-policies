import "strings"

providers = {}

resources = {
	"google_compute_instance.demo": {
		"address": "google_compute_instance.demo",
		"config": {
			"boot_disk": {
				"constant_value": null,
			},
			"machine_type": {
				"references": [
					"var.machine_type",
				],
			},
			"name": {
				"references": [
					"var.instance_name",
				],
			},
			"network_interface": {
				"constant_value": null,
			},
			"zone": {
				"references": [
					"var.gcp_zone",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "demo",
		"provider_config_key": "google",
		"provisioners":        [],
		"type":                "google_compute_instance",
	},
	"data.external.example": {
		"address": "data.external.example",
		"config": {
			"program": {
				"references": [
					"random_id.random",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "",
		"name":                "example",
		"provider_config_key": "external",
		"provisioners":        [],
		"type":                "external",
	},
}

provisioners = {}

variables = {
	"aws_region": {
		"default":        "us-east-1",
		"description":    "AWS region",
		"module_address": "",
		"name":           "aws_region",
	},
}

outputs = {}

module_calls = {}

func strip_index(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
