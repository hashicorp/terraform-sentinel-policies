import "strings"

providers = {
	"aws": {
		"alias":               "",
		"config":              {},
		"module_address":      "",
		"name":                "aws",
		"provider_config_key": "aws",
		"version_constraint":  "",
	},
}

resources = {
	"module.nested.aws_instance.ubuntu": {
		"address": "module.nested.aws_instance.ubuntu",
		"config": {
			"ami": {
				"references": [
					"var.ami_id",
				],
			},
			"associate_public_ip_address": {
				"references": [
					"var.associate_public_ip_address",
				],
			},
			"availability_zone": {
				"references": [
					"var.aws_region",
				],
			},
			"instance_type": {
				"references": [
					"var.instance_type",
				],
			},
			"tags": {
				"references": [
					"var.name",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.nested",
		"name":                "ubuntu",
		"provider_config_key": "module.nested:aws",
		"provisioners":        [],
		"type":                "aws_instance",
	},
}

provisioners = {}

variables = {
	"module.nested:ami_id": {
		"default":        "ami-2e1ef954",
		"description":    "ID of the AMI to provision. Default is Ubuntu 14.04 Base Image",
		"module_address": "module.nested",
		"name":           "ami_id",
	},
	"module.nested:associate_public_ip_address": {
		"default":        true,
		"description":    "",
		"module_address": "module.nested",
		"name":           "associate_public_ip_address",
	},
	"module.nested:aws_region": {
		"default":        "us-east-1",
		"description":    "AWS region",
		"module_address": "module.nested",
		"name":           "aws_region",
	},
	"module.nested:instance_type": {
		"default":        "t2.micro",
		"description":    "type of EC2 instance to provision.",
		"module_address": "module.nested",
		"name":           "instance_type",
	},
	"module.nested:name": {
		"default":        "roger-demo-nested",
		"description":    "name to pass to Name tag",
		"module_address": "module.nested",
		"name":           "name",
	},
	"owners": {
		"default": [
			"099720109477",
			"099720109476",
		],
		"description":    "list of owners of AMI",
		"module_address": "",
		"name":           "owners",
	},
}

outputs = {
	"module.nested:public_dns": {
		"depends_on":     [],
		"description":    "",
		"module_address": "module.nested",
		"name":           "public_dns",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.ubuntu",
			],
		},
	},
}

module_calls = {
	"nested-cloud": {
		"config":             {},
		"count":              {},
		"for_each":           {},
		"module_address":     "",
		"name":               "nested-cloud",
		"source":             "app.terraform.io/Cloud-Operations/network/aws",
		"version_constraint": "",
	},
	"nested-app": {
		"config":             {},
		"count":              {},
		"for_each":           {},
		"module_address":     "",
		"name":               "nested-app",
		"source":             "app.terraform.io/App-Operations/compute/aws",
		"version_constraint": "",
	},
}

func strip_index(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
